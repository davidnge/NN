/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Container;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import structs.Lattice;
import structs.LatticeRenderer;
import structs.Trainer;

/**
 *
 * @author ngecheekeen
 */
public class SOMGUI extends javax.swing.JFrame {

    /**
     * Creates new form SOMGUI
     */
    
    static int Height,Width =0;
    static double learningRate =0;
    static int DIMENSIONS_OF_VECTORS = 0;
    static String FileInput; //= "/Users/ngecheekeen/NetBeansProjects/NeuralPrac/src/neuralprac/NeuralPrac_input.txt";
    Timer t;
    Lattice lattice;
    
    public SOMGUI() {
        initComponents();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        startBtn = new javax.swing.JButton();
        heightText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        widthText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        learnRateText = new javax.swing.JTextField();
        stopBtn = new javax.swing.JButton();
        winnerBtn = new javax.swing.JButton();
        fourNBtn = new javax.swing.JButton();
        eightNBtn = new javax.swing.JButton();
        SOMlatticeRenderer = new structs.LatticeRenderer();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startBtn.setText("U-Matrix");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        heightText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightTextActionPerformed(evt);
            }
        });

        jLabel1.setText("Height:");

        jLabel2.setText("Width:");

        widthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                widthTextActionPerformed(evt);
            }
        });

        jLabel3.setText("Learning Rate: ");

        stopBtn.setText("Stop");
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        winnerBtn.setText("WinnerNode");
        winnerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winnerBtnActionPerformed(evt);
            }
        });

        fourNBtn.setText("4 Neighbours");
        fourNBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourNBtnActionPerformed(evt);
            }
        });

        eightNBtn.setText("8 Neighbours");
        eightNBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightNBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(41, 41, 41)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(widthText)
                            .add(heightText)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 7, Short.MAX_VALUE)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(learnRateText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(startBtn)
                .add(26, 26, 26))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(winnerBtn)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, fourNBtn)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, eightNBtn)))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(stopBtn)
                        .add(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(47, 47, 47)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(heightText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(widthText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(learnRateText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(startBtn)
                .add(18, 18, 18)
                .add(fourNBtn)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(eightNBtn)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(winnerBtn)
                .add(18, 18, 18)
                .add(stopBtn)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout SOMlatticeRendererLayout = new org.jdesktop.layout.GroupLayout(SOMlatticeRenderer);
        SOMlatticeRenderer.setLayout(SOMlatticeRendererLayout);
        SOMlatticeRendererLayout.setHorizontalGroup(
            SOMlatticeRendererLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 550, Short.MAX_VALUE)
        );
        SOMlatticeRendererLayout.setVerticalGroup(
            SOMlatticeRendererLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 550, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        openBtn.setText("Open..");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });
        jMenu1.add(openBtn);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .add(SOMlatticeRenderer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(34, 34, 34)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(SOMlatticeRenderer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void heightTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heightTextActionPerformed

    private void widthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widthTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_widthTextActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        // TODO add your handling code here:
        Register(); 
        
        Trainer trainer = new Trainer(lattice,FileInput,learningRate,SOMlatticeRenderer, "UMatrix");
        t = new Timer(100,trainer);
        t.start();
        
        //trainer.train(som, FileInput, learningRate, 10, SOMlatticeRenderer);
        
        
        
    }//GEN-LAST:event_startBtnActionPerformed

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        // TODO add your handling code here:
        t.stop();
        widthText.setText(null);
        heightText.setText(null);
        learnRateText.setText(null);
        DIMENSIONS_OF_VECTORS = 0;
    }//GEN-LAST:event_stopBtnActionPerformed

    private void winnerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winnerBtnActionPerformed
        // TODO add your handling code here:
        Register();  
        
        Trainer trainer = new Trainer(lattice,FileInput,learningRate,SOMlatticeRenderer, "Winner");
        t = new Timer(100,trainer);
        t.start();
    }//GEN-LAST:event_winnerBtnActionPerformed

    private void fourNBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourNBtnActionPerformed
        // TODO add your handling code here:
        Register(); 
        
        Trainer trainer = new Trainer(lattice,FileInput,learningRate,SOMlatticeRenderer, "fourN");
        t = new Timer(100,trainer);
        t.start();
    }//GEN-LAST:event_fourNBtnActionPerformed

    private void eightNBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightNBtnActionPerformed
        // TODO add your handling code here:
        
        Register();
  
        Trainer trainer = new Trainer(lattice,FileInput,learningRate,SOMlatticeRenderer, "eightN");
        t = new Timer(100,trainer);
        t.start();
    }//GEN-LAST:event_eightNBtnActionPerformed

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChoice = new JFileChooser();
        int returnVal = fileChoice.showOpenDialog(SOMGUI.this);
        //fileChoice.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

      
            File f = fileChoice.getSelectedFile();
            FileInput = f.getAbsolutePath();
            //imgPath.setText(imagePath);
           
    }//GEN-LAST:event_openBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SOMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SOMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SOMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SOMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SOMGUI().setVisible(true);
            }
        });
        
        
    }
    
    /** 
     * Takes an input file and determine its vector's dimension
     * 
     * @param           A String file address 
     * @void            Initialize DIMENSIONS_OF_VECTORS
     */
    public static void ReadDimensions(String FileName)
    {
        String line;
        
        try
        {
            FileReader in = new FileReader(FileName);
            BufferedReader br = new BufferedReader(in);
            
            if((line = br.readLine()) != null)
            {
                StringTokenizer token = new StringTokenizer(line, ",");
                DIMENSIONS_OF_VECTORS = token.countTokens();
                
            }
        }
        catch(Exception e)
        {
            
        }  
    }
    
    public void Register()
    {
        Height = Integer.parseInt(heightText.getText());
        Width = Integer.parseInt(widthText.getText());
        ReadDimensions(FileInput);
        //SOM som = new SOM(Height,Width,DIMENSIONS_OF_VECTORS);
        lattice = new Lattice(Height,Width,DIMENSIONS_OF_VECTORS); 
         
        BufferedImage i = SOMlatticeRenderer.getImage();
        learningRate = Double.parseDouble(learnRateText.getText());   
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private structs.LatticeRenderer SOMlatticeRenderer;
    private javax.swing.JButton eightNBtn;
    private javax.swing.JButton fourNBtn;
    private javax.swing.JTextField heightText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField learnRateText;
    private javax.swing.JMenuItem openBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JButton stopBtn;
    private javax.swing.JTextField widthText;
    private javax.swing.JButton winnerBtn;
    // End of variables declaration//GEN-END:variables
}
